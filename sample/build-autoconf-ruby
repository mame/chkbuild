#!/usr/bin/env ruby

# sample/build-autoconf-ruby - build script for autoconf and ruby
#
# Copyright (C) 2005-2012 Tanaka Akira  <akr@fsij.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#  3. The name of the author may not be used to endorse or promote
#     products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

require 'chkbuild'

#ENV['LC_ALL'] = 'C'

# resource limits
#word_bytes = [nil].pack("p").length
#ChkBuild.limit(:cpu => 3600*4) # seconds
#ChkBuild.limit(:stack => 1024*1024*10*word_bytes) # bytes
#ChkBuild.limit(:data => 1024*1024*500*word_bytes) # bytes
#ChkBuild.limit(:as => 1024*1024*500*word_bytes) # bytes

# configure: autobuild timestamp... 20110212T115136Z
ChkBuild.define_diff_preprocess_gsub('autoconf', /configure: autobuild timestamp\.\.\. \d{8,}T\d{6}Z/) {|m|
  'configure: autobuild timestamp... YYYYMMDDThhmmssZ'
}

# configure: autobuild revision... 2.68.36-cc21
ChkBuild.define_diff_preprocess_gsub('autoconf', /configure: autobuild revision\.\.\. \S*/) {|m|
  'configure: autobuild revision... <version>'
}

# echo 2.68.36-cc21 > .version-t && mv .version-t .version
ChkBuild.define_diff_preprocess_gsub('autoconf', /echo \S* > \.version-t/) {|m|
  'echo <version> > .version-t'
}

# sed ... -e 's|@VERSION[@]|2.68.36-cc21|g' ...
ChkBuild.define_diff_preprocess_gsub('autoconf', /'s\|@VERSION\[@\]\|[^| ]*\|g'/) {|m|
  "'s|@VERSION[@]|<version>|g'"
}

# echo 'm4_define([m4_PACKAGE_VERSION],   [2.68.36-cc21])' && \
ChkBuild.define_diff_preprocess_gsub('autoconf', /\[m4_PACKAGE_VERSION\],\s*\[[^\[\] ]*\]/) {|m|
  "[m4_PACKAGE_VERSION],   [<version>]'"
}

# echo 'm4_define([m4_PACKAGE_STRING],    [GNU Autoconf 2.68.36-cc21])' && \
ChkBuild.define_diff_preprocess_gsub('autoconf', /\[m4_PACKAGE_STRING\],\s*\[GNU Autoconf [^\[\] ]*\]/) {|m|
  "[m4_PACKAGE_STRING],    [GNU Autoconf <version>]"
}

#    --source='GNU Autoconf 2.68.36-cc21' \
ChkBuild.define_diff_preprocess_gsub('autoconf', /--source='GNU Autoconf [^' ]*'/) {|m|
  "--source='GNU Autoconf <version>'"
}

# autoconf (GNU Autoconf) 2.68.36-cc21
ChkBuild.define_diff_preprocess_gsub('autoconf', /^autoconf \(GNU Autoconf\) \S*/) {|m|
  "autoconf (GNU Autoconf) <version>"
}

ChkBuild.define_build_proc('autoconf') {|b|
  dir = b.build_dir
  # http://git.savannah.gnu.org/gitweb/?p=autoconf.git
  # http://git.savannah.gnu.org/cgit/autoconf.git
  # git://git.savannah.gnu.org/autoconf.git
  b.git('git://git.savannah.gnu.org/autoconf.git', 'autoconf')
  Dir.chdir('autoconf') {
    b.run("autoreconf", "-vi")
    b.run("./configure", "--prefix=#{dir}")
    b.make
    b.make("install")
  }
  b.run("#{dir}/bin/autoconf", '--version', :section=>'version')
}

ChkBuild.define_title_hook('autoconf', 'version') {|title, log|
  case log
  when /^Autoconf version (.*)$/
    title.update_title(:version, "autoconf #{$1}")
  when /^autoconf \(GNU Autoconf\) (.*)$/
    # + /home/akr/chkbuild/tmp/build/autoconf/20110212T124506Z/bin/autoconf --version
    # autoconf (GNU Autoconf) 2.68.36-cc21
    title.update_title(:version, "autoconf #{$1}")
  end
}

Autoconf = ChkBuild.def_target('autoconf')

ChkBuild::Ruby.def_target(
  # ChkBuild::Ruby::MaintainedBranches,
  %w[trunk],
  Autoconf,
  :inplace_build => false)

ChkBuild.main
