#!/usr/bin/env ruby

# sample/build-libffi-ruby - build script for libffi and ruby
#
# Copyright (C) 2012 Tanaka Akira  <akr@fsij.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#  3. The name of the author may not be used to endorse or promote
#     products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

require 'chkbuild'

# resource limits
#word_bytes = [nil].pack("p").length
#ChkBuild.limit(:cpu => 3600*4) # seconds
#ChkBuild.limit(:stack => 1024*1024*10*word_bytes) # bytes
#ChkBuild.limit(:data => 1024*1024*500*word_bytes) # bytes
#ChkBuild.limit(:as => 1024*1024*500*word_bytes) # bytes

ChkBuild.define_build_proc('libffi') {|b|
  bdir = b.build_dir
  b.git('git://github.com/atgreen/libffi.git', 'libffi')
  Dir.chdir('libffi') {
    b.run("./configure", "--prefix=#{bdir}")
    b.make
    b.make("install")
    b.catch_error {
      b.run("cat", "#{bdir}/lib/pkgconfig/libffi.pc", :section=>"pkgconfig")
    }
  }
}

libffi = ChkBuild.def_target('libffi')

ChkBuild.define_title_hook('libffi', 'pkgconfig') {|title, log|
  case log
  when /^Version: (.*)$/
    ver = "libffi #{$1}"
    title.update_title(:version, ver)
  end
}

ChkBuild::Ruby.def_target(
  %w[trunk],
  libffi)

ChkBuild.main
