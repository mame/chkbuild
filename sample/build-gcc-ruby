#!/usr/bin/env ruby

# sample/build-gcc-ruby - build script for gcc and ruby
#
# Copyright (C) 2005-2012 Tanaka Akira  <akr@fsij.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#  3. The name of the author may not be used to endorse or promote
#     products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

require 'chkbuild'

#ENV['LC_ALL'] = 'C'

# Workaround for GCC with Multiarch.
# http://wiki.debian.org/Multiarch.
# (Ubuntu Natty and Debian Wheezy)
#
#   ENV['CPATH'] = '/usr/include/i386-linux-gnu'
#   ENV['LIBRARY_PATH'] = '/usr/lib/i386-linux-gnu'

# resource limits
#word_bytes = [nil].pack("p").length
#ChkBuild.limit(:cpu => 3600*4) # seconds
#ChkBuild.limit(:stack => 1024*1024*10*word_bytes) # bytes
#ChkBuild.limit(:data => 1024*1024*500*word_bytes) # bytes
#ChkBuild.limit(:as => 1024*1024*500*word_bytes) # bytes

gcc = ChkBuild::GCC.def_target(
  #%w[trunk],
  #%w[trunk 4.7 4.6 4.5],
  %w[4.7 4.6 4.5],
  #%w[trunk 4.5],
  #%w[4.5],
  :old => 1)

ChkBuild::Ruby.def_target(
  #ChkBuild::Ruby::MaintainedBranches,
  %w[trunk],

  [
    { :suffix_? => '-o3', :optflags => %w[-O3] },
    { :suffix_? => '-o2', :optflags => %w[-O2] },
    { :suffix_? => '-o1', :optflags => %w[-O1] },
    { :suffix_? => '-o0', :optflags => %w[-O0] },
    { :suffix_? => '-os', :optflags => %w[-Os] },
  ],

  #[
  #  { :suffix_? => '-nocona', :optflags_arch => %w[-march=nocona] },
  #  { :suffix_? => '-core2', :optflags_arch => %w[-march=core2] },
  #  { :suffix_? => '-corei7', :optflags_arch => %w[-march=corei7] },
  #  { :suffix_? => '-corei7avx', :optflags_arch => %w[-march=corei7-avx] },
  #  nil
  #],

  [nil, "pth"],
  gcc,
  :old => 1,
  :inplace_build => false)

ChkBuild.main
