#!/usr/bin/env ruby

# sample/build-bison-ruby - build script for bison and ruby
#
# Copyright (C) 2012 Tanaka Akira  <akr@fsij.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#  3. The name of the author may not be used to endorse or promote
#     products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

require 'chkbuild'

#ENV['LC_ALL'] = 'C'

# resource limits
#word_bytes = [nil].pack("p").length
#ChkBuild.limit(:cpu => 3600*4) # seconds
#ChkBuild.limit(:stack => 1024*1024*10*word_bytes) # bytes
#ChkBuild.limit(:data => 1024*1024*500*word_bytes) # bytes
#ChkBuild.limit(:as => 1024*1024*500*word_bytes) # bytes

bison_choices = [
  {
    :suffix_? => '-master',
    :bison_branch => nil,
  },
  {
    :suffix_? => '-2.5',
    :bison_branch => 'branch-2.5',
  },
]

ChkBuild.define_build_proc('bison') {|b|
  bdir = b.build_dir
  tdir = b.target_dir
  Dir.chdir(tdir) {
    first = !File.directory?('bison')
    # http://git.savannah.gnu.org/cgit/bison.git
    b.git('git://git.savannah.gnu.org/bison.git', 'bison',
      :branch=>b.opts[:bison_branch])
    Dir.chdir("bison") {
      if first
        b.run('git', 'submodule', 'update', '--init')
      else
        b.run('git', 'submodule', 'update')
      end
      b.run('git', 'submodule')
      b.run('git', 'status')
      b.run('git', 'diff')
    }
  }
  b.run('sh', '-c', "( cd #{tdir}; tar cf - bison ) | ( cd #{bdir}; tar xf - )", :section => 'copy-working-directory')
  Dir.chdir('bison') {
    b.install_rsync_wrapper
    b.run('./bootstrap')
    b.run('./configure', "--prefix=#{bdir}")
    b.make
    b.make('install')
  }
  b.run("#{bdir}/bin/bison", '--version', :section=>'version')
}

ChkBuild.define_title_hook('bison', 'version') {|title, log|
  case log
  when /^bison \(GNU Bison\) (.*)$/
    title.update_title(:version, "bison #{$1}")
  end
}

Bison = ChkBuild.def_target('bison', bison_choices)

ChkBuild::Ruby.def_target(
  # ChkBuild::Ruby::MaintainedBranches,
  %w[trunk],
  Bison,
  :inplace_build => false)

ChkBuild.main
